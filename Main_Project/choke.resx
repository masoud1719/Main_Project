<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="label48.ToolTip" xml:space="preserve">
    <value>Specifies the wire standard
SWG : Standard Wire Gauge
AWG : American Wire Gauge
BWG : Birmingham Wire Gauge
Specifies the wire standard
SWG : Standard Wire Gauge
AWG : American Wire Gauge
BWG : Birmingham Wire Gauge


</value>
  </data>
  <data name="label44.ToolTip" xml:space="preserve">
    <value>Winding is done in two ways:
1. Concentric : We have this type of winding when the structure is core type
2. Sandwitch : We have this type of winding when the structure is shell type

Because the structure is shell type, we only have the second method.</value>
  </data>
  <data name="label23.ToolTip" xml:space="preserve">
    <value>Insulation is determined based on the thickness of the sheets.
For the thickness of 0.5 mm, we have these items:
Single layer varnish
Two layer varnish
Three layer varnish

For the thickness of 0.35 mm, we have these items:
Single layer varnish
Two layer varnish
Three layer varnish
Heat resistance coating
Single layer varnish+Heat resistance coating

</value>
  </data>
  <metadata name="Parameter.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="unit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="value.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Parameter.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="unit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="value.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="label24.ToolTip" xml:space="preserve">
    <value>This value is between 1 and 1.25 for shell type trans.By default, this value is equal to 1.

For economic design with power less than 4000 VA instead of constant 1 of the coefficients in the range of 0.56 to 0.85

</value>
  </data>
  <data name="label2.ToolTip" xml:space="preserve">
    <value>The conductors used are copper and aluminum.
Aluminum is used in small transformers, whose power is less than 6 MVA.
Copper can also be used in medium and large transformers whose power is greater than 6 MVA.

</value>
  </data>
  <data name="label3.ToolTip" xml:space="preserve">
    <value>The available sheets include two categories:
1. Non Grain oriented seed sheets included:
Low silicon : M36, M43
Medium silicone : : M19, M27
High silicon : : M15, M22

Cold Rolled Grain Oriented (CRGO)

By changing the type of steel, the value of flux density and iron loss (Wi) changes.

</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAD///////////////////////////7+/v/+/v7///////7+/v/+/v7/////////////////////////
        //////////////////////////////////////////////7+/v///////v7+//39/f//////////////
        //////////////////////////////7+/v/5+fn/9PT0/9zc3P/IxcX/zszM//Pz8///////////////
        //////////////////////////////7+/v//////+/v7/3V0df8+PD7/QD0//1VVVv+Xlpf/yMrL//z8
        /P/9/f3///////////////////////7+/v//////6enp/2ZkZv8wLS//KSgq/xMTFf8WFhn/Jyku/01P
        Uf/b29v///////7+/v/////////////////9/f3//////8rJyv8aFxr/OTg5/zs9Pf8kJij/HyIm/yYr
        M/8bGx3/T1JY/7a2t////////v7+/////////////f39///////NzM3/KScp/zo5Of88Pj//ho+V/3R5
        f/8wOkf/IyUq/0RJUv+FhYb////////////////////////////+/v7//////2NhY/8xMDH/NDQ4/6mw
        s//f6vL/hZy7/0tXYv+wuMH///////39/f///////////////////////Pz8//////9tbW7/MjEz/y8v
        Mv+Xmpv/2OTu/5Ow0/+jvtj/u87h///////+/v7///////////////////////z8/P//////cW9x/zc1
        Nv87PUD/pK+1/7LI3f+FoMH/q8Pb/6G92f/7/f3///////////////////////7+/v//////9fX1/2Bf
        YP9DQkL/Ojw//1pkb/9/nLz/or/b/5Sz0P+Ys9D///////7+///////////////////9/P3//////8bG
        x/8oJij/QUFC/1teX/8tLzD/KzE4/25/kP95nL//z9/q///////9/v7///////////////////////7+
        /v//////x8fI/3p8ff9wcnL/h4qL/19iYf8mJyj/MDc+/8XHyP///////f39////////////////////
        ///////////////////+/v7/ycnK/46Oj/+Fh4j/iIyM/0xPT/+3ubn///////z8/P//////////////
        ///////////////////9/f3//f39///////+/v7/0dDR/5+foP/HyMn/7u/w///////+/v7/////////
        ///////////////////////////////////9/f3//v7+////////////////////////////////////
        ////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>